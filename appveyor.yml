environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python270"
      PYTHON_VERSION: "2.7.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python270-x64"
      PYTHON_VERSION: "2.7.0"
      PYTHON_ARCH: "64"


    - PYTHON: "C:\\Python27.14"
      PYTHON_VERSION: "2.7.14"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.14-x64"
      PYTHON_VERSION: "2.7.14"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27.13"
      PYTHON_VERSION: "2.7.13"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.13-x64"
      PYTHON_VERSION: "2.7.13"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27.12"
      PYTHON_VERSION: "2.7.12"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.12-x64"
      PYTHON_VERSION: "2.7.12"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27.11"
      PYTHON_VERSION: "2.7.11"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.11-x64"
      PYTHON_VERSION: "2.7.11"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27.10"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.10-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27.9"
      PYTHON_VERSION: "2.7.9"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.9-x64"
      PYTHON_VERSION: "2.7.9"
      PYTHON_ARCH: "64"

install:
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  #- "pip install --disable-pip-version-check --user --upgrade pip"
  - cp "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdint.h" "librxvm\stdint.h"
  - "%CMD_IN_ENV% pip install wheel"

build: off

test_script:
  # Build extension
  - "%CMD_IN_ENV% python setup.py build"
  - "%CMD_IN_ENV% pip install . --upgrade"
  - "%CMD_IN_ENV% python setup.py test"

after_test:
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - "%CMD_IN_ENV% python setup.py bdist_msi"
  - "move \"pyrxvm/dist\" \"python_%PYTHON_VERSION%_%PYTHON_ARCH%\""

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: python_$(PYTHON_VERSION)_$(PYTHON_ARCH)\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
